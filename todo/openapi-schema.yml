openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/users/:
    get:
      operationId: listUsers
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/AppUsers'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppUsers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppUsers'
          application/json:
            schema:
              $ref: '#/components/schemas/AppUsers'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUsers'
          description: ''
      tags:
      - api
  /api/users/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u043F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUsers'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u043F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppUsers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppUsers'
          application/json:
            schema:
              $ref: '#/components/schemas/AppUsers'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUsers'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u043F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppUsers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppUsers'
          application/json:
            schema:
              $ref: '#/components/schemas/AppUsers'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUsers'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: "A unique integer value identifying this \u043F\u043E\u043B\u044C\
          \u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C."
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/projects/:
    get:
      operationId: listProjects
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProjectModel'
          description: ''
      tags:
      - api
    post:
      operationId: createProject
      description: ''
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectModel'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectModel'
          description: ''
      tags:
      - api
  /api/projects/{id}/:
    get:
      operationId: retrieveProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectModel'
          description: ''
      tags:
      - api
    put:
      operationId: updateProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectModel'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectModel'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectModel'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectModel'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      - name: name
        required: false
        in: query
        description: name
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/todo/:
    get:
      operationId: listToDos
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TodoModel'
          description: ''
      tags:
      - api
    post:
      operationId: createToDo
      description: ''
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TodoModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TodoModel'
          application/json:
            schema:
              $ref: '#/components/schemas/TodoModel'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoModel'
          description: ''
      tags:
      - api
  /api/todo/{id}/:
    get:
      operationId: retrieveToDo
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this to do.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoModel'
          description: ''
      tags:
      - api
    put:
      operationId: updateToDo
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this to do.
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TodoModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TodoModel'
          application/json:
            schema:
              $ref: '#/components/schemas/TodoModel'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoModel'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateToDo
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this to do.
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TodoModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TodoModel'
          application/json:
            schema:
              $ref: '#/components/schemas/TodoModel'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoModel'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyToDo
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this to do.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/users_on_project/:
    get:
      operationId: listUserOnProjects
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserOnProject'
          description: ''
      tags:
      - api
    post:
      operationId: createUserOnProject
      description: ''
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserOnProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserOnProject'
          application/json:
            schema:
              $ref: '#/components/schemas/UserOnProject'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOnProject'
          description: ''
      tags:
      - api
  /api/users_on_project/{id}/:
    get:
      operationId: retrieveUserOnProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user on project.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOnProject'
          description: ''
      tags:
      - api
    put:
      operationId: updateUserOnProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user on project.
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserOnProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserOnProject'
          application/json:
            schema:
              $ref: '#/components/schemas/UserOnProject'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOnProject'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUserOnProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user on project.
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserOnProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserOnProject'
          application/json:
            schema:
              $ref: '#/components/schemas/UserOnProject'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOnProject'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUserOnProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user on project.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/executors/:
    get:
      operationId: listExecutors
      description: ''
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=4
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?page=2
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ExecutorToDoModel'
          description: ''
      tags:
      - api
    post:
      operationId: createExecutor
      description: ''
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExecutorToDoModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExecutorToDoModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutorToDoModel'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutorToDoModel'
          description: ''
      tags:
      - api
  /api/executors/{id}/:
    get:
      operationId: retrieveExecutor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this executor.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutorToDoModel'
          description: ''
      tags:
      - api
    put:
      operationId: updateExecutor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this executor.
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExecutorToDoModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExecutorToDoModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutorToDoModel'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutorToDoModel'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateExecutor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this executor.
        schema:
          type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExecutorToDoModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExecutorToDoModel'
          application/json:
            schema:
              $ref: '#/components/schemas/ExecutorToDoModel'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutorToDoModel'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyExecutor
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this executor.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api-token-auth/:
    post:
      operationId: createAuthToken
      description: ''
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
      tags:
      - api-token-auth
  /api/token/:
    post:
      operationId: createTokenObtainPair
      description: 'Takes a set of user credentials and returns an access and refresh
        JSON web

        token pair to prove the authentication of those credentials.'
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/token/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
  /api/token/verify/:
    post:
      operationId: createTokenVerify
      description: 'Takes a token and indicates if it is valid.  This view provides
        no

        information about a token''s fitness for a particular use.'
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
      tags:
      - api
components:
  schemas:
    AppUsers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: "\u041E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u044C\u043D\
            \u043E\u0435 \u043F\u043E\u043B\u0435. \u041D\u0435 \u0431\u043E\u043B\
            \u0435\u0435 150 \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432. \u0422\
            \u043E\u043B\u044C\u043A\u043E \u0431\u0443\u043A\u0432\u044B, \u0446\u0438\
            \u0444\u0440\u044B \u0438 \u0441\u0438\u043C\u0432\u043E\u043B\u044B @/./+/-/_."
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        add_datetime:
          type: string
          format: date-time
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - username
      - email
    ProjectModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_on_project:
          type: array
          items:
            type: string
        name:
          type: string
          maxLength: 64
        description:
          type: string
        href_repo:
          type: string
          format: uri
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4]\\\
            d|1\\d?\\d?|[1-9]\\d?)(?:\\.(?:0|25[0-5]|2[0-4]\\d|1\\d?\\d?|[1-9]\\d?)){3}|\\\
            [[0-9a-f:.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
            -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1\
            -\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\.?|localhost))(?::\\d{1,5})?(?:[/?#][^\\\
            s]*)?\\z"
        add_date:
          type: string
          format: date-time
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - user_on_project
      - name
      - description
      - href_repo
    TodoModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_on_todo:
          type: array
          items:
            type: string
        title:
          type: string
          maxLength: 64
        description:
          type: string
        is_active:
          type: boolean
        is_close:
          type: boolean
        scheduled_date:
          type: string
          format: date-time
          nullable: true
        actual_date:
          type: string
          format: date-time
          nullable: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
        project_id:
          type: integer
      required:
      - user_on_todo
      - project_id
    UserOnProject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        project:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
          nullable: true
    ExecutorToDoModel:
      type: object
      properties:
        url:
          type: string
          readOnly: true
        add_date:
          type: string
          format: date-time
          readOnly: true
        last_modified:
          type: string
          format: date-time
          readOnly: true
        todo:
          type: string
        user_on_project:
          type: string
          nullable: true
      required:
      - todo
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - username
      - password
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
      required:
      - token
